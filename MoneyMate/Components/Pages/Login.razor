@page "/login"
@using MoneyMate.Models
@using MoneyMate.Services
@inject CsvService CsvService
@inject StateService StateService
@inject NavigationManager NavigationManager

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Login to MoneyMate</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @errorMessage
                            <button type="button" class="btn-close" @onclick="() => errorMessage = string.Empty"></button>
                        </div>
                    }

                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">Username</label>
                            <InputText @bind-Value="loginModel.Username" class="form-control" />
                            <ValidationMessage For="@(() => loginModel.Username)" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Password</label>
                            <InputText type="password" @bind-Value="loginModel.Password" class="form-control" />
                            <ValidationMessage For="@(() => loginModel.Password)" class="text-danger" />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Login</button>
                            <button type="button" class="btn btn-secondary" @onclick="NavigateToRegister">
                                Don't have an account? Register
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        try
        {
            Console.WriteLine($"Attempting login for user: {loginModel.Username}"); // Debug log
            var loginResult = await CsvService.ValidateLoginAsync(loginModel.Username, loginModel.Password);

            if (loginResult)
            {
                Console.WriteLine("Login successful, setting username and navigating"); // Debug log
                StateService.CurrentUsername = loginModel.Username;
                NavigationManager.NavigateTo("/dashboard", true); // Force reload
            }
            else
            {
                Console.WriteLine("Login failed"); // Debug log
                errorMessage = "Invalid username or password";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Login error: {ex.Message}"); // Debug log
            errorMessage = "An error occurred during login. Please try again.";
        }
    }

    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}